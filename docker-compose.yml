# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

version: '2'
services:
  lando-ui.test:
    image: nginx:alpine
    container_name: lando-ui.test
    volumes:
      - ./docker/landoui/site.conf:/etc/nginx/conf.d/default.conf:ro
    restart: on-failure
    depends_on:
      - lando-ui

  lando-api.test:
    image: nginx:alpine
    container_name: lando-api.test
    volumes:
      - ./docker/landoapi/site.conf:/etc/nginx/conf.d/default.conf:ro
    volumes_from:
      - lando-api
    restart: on-failure
    depends_on:
      - lando-api

  bmo.test:
    image: mozillaconduit/docker-bmo

  demo:
    build:
      context: docker/vct-hg
      dockerfile: ./Dockerfile
    volumes:
      - .:/home/phab/repo:ro
    depends_on:
      - tinyproxy
      - phabricator.test
      - bmo.test

  lando-ui:
    image: mozilla/landoui
    environment:
      - DEBUG=True
      - ENV=localdev
      - HOST=0.0.0.0
      - LANDO_API_OIDC_IDENTIFIER=lando-api-oidc-identifier
      - LANDO_API_URL=http://lando-api.test
      - OIDC_CLIENT_ID=oidc_client_id_change_me
      - OIDC_CLIENT_SECRET=oidc_client_secret_change_me
      - OIDC_DOMAIN=oidc_domain_change_me
      - PORT=9000
      - SECRET_KEY=secret_key_change_me
      - SENTRY_DSN=
      - SESSION_COOKIE_DOMAIN=lando-ui.test
      - SESSION_COOKIE_NAME=lando-ui.test
      - SESSION_COOKIE_SECURE=0
      - USE_HTTPS=0
      - VERSION_PATH=/version.json

  lando-api:
    image: mozilla/landoapi:latest
    environment:
      # Leave AWS credentials unconfigured in production
      - AWS_ACCESS_KEY=
      - AWS_SECRET_KEY=
      - DATABASE_URL=postgresql://postgres:password@lando-api.db/lando_api_dev
      - ENV=localdev
      - OIDC_DOMAIN=
      - OIDC_IDENTIFIER=
      - PATCH_BUCKET_NAME=
      - PINGBACK_ENABLED=y
      - PINGBACK_HOST_URL=http://lando-api.test
      - PHABRICATOR_URL=http://phabricator.test
      - PHABRICATOR_UNPRIVILEGED_API_KEY=cli-wnxaaftwm34jjfheiokqevsshlg7
      - PORT=9000
      - TRANSPLANT_API_KEY=set-api-key
      - TRANSPLANT_URL=https://stub.transplant.example.com
      - HOST_URL=http://lando-api.test
      - SENTRY_DSN=
    depends_on:
      - lando-api.db

  lando-api.db:
    image: postgres:alpine
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
    volumes:
      - postgres_db:/var/lib/postgresql/data
      - ./docker/postgres-init-scripts/:/docker-entrypoint-initdb.d/
    ports:
      - "54321:5432"

  phabricator:
    image: mozilla/phabext
    environment:
      - MYSQL_HOST=phabdb
      - MYSQL_PORT=3306
      - MYSQL_USER=root
      - MYSQL_PASS=password
      - PHABRICATOR_URI=http://phabricator.test/
      - PHABRICATOR_CDN_URI=http://phabricator.test/
      - BUGZILLA_URL=http://bmo.test
      - BUGZILLA_AUTOMATION_USER=phab-bot@bmo.tld
      - BUGZILLA_AUTOMATION_API_KEY=8G4ly8JkxbypZgh5XrdiHWExVEjPq5S3HvMBll1K

    restart: on-failure
    depends_on:
      - phabdb

  phabricator.test:
    image: nginx:alpine
    volumes:
      - ./docker/phabricator/site.conf:/etc/nginx/conf.d/default.conf:ro
    volumes_from:
      - phabricator
    depends_on:
      - phabricator
      - tinyproxy

  phabdb:
    image: mysql:5.5
    volumes:
      - phabricator-mysql-db:/var/lib/mysql
      - ./docker/phabricator/mysql:/etc/mysql/conf.d:ro
      - ./docker/phabricator/demo.sql.gz:/docker-entrypoint-initdb.d/demo.sql.gz
    environment:
      - MYSQL_ROOT_PASSWORD=password

  tinyproxy:
    build:
      context: docker/tinyproxy
      dockerfile: ./Dockerfile
    ports:
      - "1080:1080"

volumes:
  phabricator-mysql-db:
  postgres_db:
