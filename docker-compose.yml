# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

version: '2'
services:
  #########################
  # BMO Containers
  #########################

  bmo.test:
    image: mozillabteam/bmo
    command: demo
    volumes:
      - bmo-data-dir:/app/data
    environment: &bmo_env
      LOCALCONFIG_ENV: 1
      BUGZILLA_UNSAFE_AUTH_DELEGATION: 1
      PORT: 80
      BMO_db_host: bmodb
      BMO_db_name: bugs
      BMO_db_user: bugs
      BMO_db_pass: bugs
      BMO_memcached_namespace: bugzilla
      BMO_memcached_servers: memcached:11211
      BMO_urlbase: http://bmo.test/
      BMO_inbound_proxies: "*"
      BZ_QA_ANSWERS_FILE: /app/.circleci/checksetup_answers.txt
      PHABRICATOR_AUTH_CALLBACK_URL: http://phabricator.test/auth/login/bmo:bmo.test/
      CONDUIT_USER_LOGIN: conduit@mozilla.bugs
      CONDUIT_USER_PASSWORD: password123456789!
      CONDUIT_USER_API_KEY: zQ5TSBzq7tTZMtKYq9K1ZqJMjifKx3cPL7pIGk9Q
      PHABRICATOR_BOT_LOGIN: phab-bot@bmo.tld
      PHABRICATOR_BOT_PASSWORD: password123456789!
      PHABRICATOR_BOT_API_KEY: 8G4ly8JkxbypZgh5XrdiHWExVEjPq5S3HvMBll1K
      PHABRICATOR_API_KEY: api-qdaethogwpld3wmn2cnhbh57wkux
      PHABRICATOR_APP_ID: 66365490f364fbafba439619f0f31b7a4a0d73528c485520adf3b295f934acda
    depends_on:
      - bmodb
      - memcached

  bmo.feed:
    image: mozillabteam/bmo
    command:
      - perl
      - extensions/PhabBugz/bin/phabbugz_feed.pl
      - start
      - '-d'
      - '-f'
    volumes:
      - bmo-data-dir:/app/data
    environment: *bmo_env
    restart: on-failure
    depends_on:
      - phabricator.test
      - bmodb
      - memcached

  bmo.pushd:
    image: mozillabteam/bmo
    command:
      - perl
      - extensions/Push/bin/bugzilla-pushd.pl
      - start
      - '-d'
      - '-f'
    volumes:
      - bmo-data-dir:/app/data
    environment: *bmo_env
    restart: on-failure
    depends_on:
      - phabricator.test
      - bmodb
      - memcached

  bmodb:
    image: mozillabteam/bmo-mysql:5.6
    volumes:
      - bmo-mysql-db:/var/lib/mysql
    logging:
      driver: "none"
    environment:
      MYSQL_DATABASE: bugs
      MYSQL_USER: bugs
      MYSQL_PASSWORD: bugs
      MYSQL_ALLOW_EMPTY_PASSWORD: 1

  memcached:
    image: memcached:latest

  #########################
  # Lando Containers
  #########################

  lando-ui:
    image: mozilla/landoui
    environment:
      DEBUG: 1
      ENV: localdev
      HOST: 0.0.0.0
      LANDO_API_OIDC_IDENTIFIER: http://lando-api.test
      LANDO_API_URL: http://lando-api.test
      PORT: 9000
      SECRET_KEY: secret_key_change_me
      SENTRY_DSN: 
      SESSION_COOKIE_DOMAIN: lando-ui.test
      SESSION_COOKIE_NAME: lando-ui.test
      SESSION_COOKIE_SECURE: 0
      USE_HTTPS: 0
      UWSGI_HTTP: :9000
      UWSGI_SOCKET: :9001
      VERSION_PATH: /app/version.json

  lando-api:
    image: mozilla/landoapi:latest
    environment:
      OIDC_IDENTIFIER: http://lando-api.test
      LOCALDEV_MOCK_AUTH0_USER: inject_valid  # [default / inject_invalid]
      DATABASE_URL: postgresql://postgres:password@lando-api.db/postgres
      ENV: localdev
      HOST_URL: http://lando-api.test
      PINGBACK_ENABLED: y
      PINGBACK_HOST_URL: http://lando-api.test
      PHABRICATOR_URL: http://phabricator.test
      PHABRICATOR_UNPRIVILEGED_API_KEY: api-qdaethogwpld3wmn2cnhbh57wkux
      TRANSPLANT_URL: http://transplant-api.test/
      TRANSPLANT_USERNAME: autoland
      TRANSPLANT_PASSWORD: autoland
      TRANSPLANT_API_KEY: autoland
      SENTRY_DSN: 
      UWSGI_HTTP: :9000
      UWSGI_SOCKET: :9001
    depends_on:
      - lando-api.db

  lando-api.db:
    image: postgres:alpine
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
    volumes:
      - lando-postgres-db:/var/lib/postgresql/data
    ports:
      - "54322:5432"


  ###############################
  # Phabricator Containers
  ###############################

  phabricator:
    image: mozilla/phabext
    entrypoint: /app/entrypoint.sh
    command: dev_start
    environment:
      MYSQL_HOST: phabdb
      MYSQL_PORT: 3306
      MYSQL_USER: root
      MYSQL_PASS: password
      PHABRICATOR_URI: http://phabricator.test/
      PHABRICATOR_CDN_URI: http://phabricator.test/
      BUGZILLA_URL: http://bmo.test
      BUGZILLA_AUTOMATION_USER: phab-bot@bmo.tld
      BUGZILLA_AUTOMATION_API_KEY: 8G4ly8JkxbypZgh5XrdiHWExVEjPq5S3HvMBll1K
    restart: on-failure
    depends_on:
      - phabdb

  phabdb:
    image: mysql:5.5
    volumes:
      - phabricator-mysql-db:/var/lib/mysql
      - ./docker/phabricator/mysql:/etc/mysql/conf.d:ro
      - ./docker/phabricator/demo.sql.gz:/docker-entrypoint-initdb.d/demo.sql.gz
    environment:
      - MYSQL_ROOT_PASSWORD=password
    restart: on-failure

  ###############################
  # Transplant services
  ###############################

  autoland.treestatus:
    image: mozilla/autolandtreestatus
    restart: always

  autoland.hg-init:
    image: mozilla/autolandhg
    command: init
    volumes:
      - autoland-hg:/repos

  autoland.hg:
    image: mozilla/autolandhg
    restart: always
    ports:
      - "8101:8000"
    volumes:
      - autoland-hg:/repos
    depends_on:
      - autoland.hg-init

  autoland.db:
    image: postgres:10.1-alpine
    restart: always
    environment:
      POSTGRES_DB: autoland
      POSTGRES_USER: autoland
      POSTGRES_PASSWORD: autoland
    volumes:
      - autoland-db:/var/lib/postgresql

  autoland.transplant-init:
    image: mozilla/autolandtransplant
    command: init
    environment: &transplant_env
      LANDO_API_KEY: autoland
      LANDO_HOST: lando-api.test
      TREESTATUS_URL: "http://treestatus:8000/%s"
    depends_on:
      - autoland.db
    volumes:
      - autoland-dev-repos:/repos
    links:
      - autoland.db:autolanddb
      - autoland.hg:autolandhg

  autoland.transplant-api:
    image: mozilla/autolandtransplant
    restart: always
    command: api
    environment: *transplant_env
    depends_on:
      - autoland.db
      - autoland.transplant-init
    ports:
      - "8100:8000"
    links:
      - autoland.db:autolanddb
      - autoland.hg:autolandhg

  autoland.transplant-daemon:
    image: mozilla/autolandtransplant
    restart: always
    command: daemon
    environment: *transplant_env
    depends_on:
      - autoland.db
      - autoland.transplant-init
    links:
      - autoland.db:autolanddb
      - autoland.hg:autolandhg
      - autoland.treestatus:treestatus

  ###########################
  # LOCAL-DEV
  # Provide an ability to run all CLI developer needs:
  # * CVS push/pull to autoland.hg
  # * arc diff to phabricator.test
  ###########################

  local-dev:
    build:
      context: docker/local-dev
      dockerfile: ./Dockerfile
    volumes:
      - .:/home/phab/repo:ro
    depends_on:
      - tinyproxy
      - phabricator.test
      - bmo.test
      - bmo.feed
      - bmo.pushd
      - autoland.hg.test

  ###########################
  # Proxy containers
  ###########################

  tinyproxy:
    build:
      context: docker/tinyproxy
      dockerfile: ./Dockerfile
    ports:
      - "1080:1080"

  phabricator.test:
    image: nginx:alpine
    volumes:
      - ./docker/phabricator/site.conf:/etc/nginx/conf.d/default.conf:ro
    volumes_from:
      - phabricator
    restart: on-failure
    depends_on:
      - phabricator
      - tinyproxy

  lando-ui.test:
    image: nginx:alpine
    container_name: lando-ui.test
    volumes:
      - ./docker/landoui/site.conf:/etc/nginx/conf.d/default.conf:ro
    volumes_from:
      - lando-ui
    restart: on-failure
    depends_on:
      - lando-ui
      - tinyproxy

  lando-api.test:
    image: nginx:alpine
    container_name: lando-api.test
    volumes:
      - ./docker/landoapi/site.conf:/etc/nginx/conf.d/default.conf:ro
    volumes_from:
      - lando-api
    restart: on-failure
    depends_on:
      - lando-api
      - tinyproxy

  autoland.transplant-api.test:
    image: nginx:alpine
    container_name: transplant-api.test
    volumes:
      - ./docker/transplant-api/site.conf:/etc/nginx/conf.d/default.conf:ro
    environment:
      - TRANSPLANT_PORT=8100
    volumes_from:
      - autoland.transplant-api
    restart: on-failure
    depends_on:
      - autoland.transplant-api
      - tinyproxy

  autoland.hg.test:
    image: nginx:alpine
    container_name: hg.test
    volumes:
      - ./docker/autoland-hg/site.conf:/etc/nginx/conf.d/default.conf:ro
    volumes_from:
      - autoland.hg
    restart: on-failure
    depends_on:
      - autoland.hg
      - tinyproxy

volumes:
  phabricator-mysql-db:
  lando-postgres-db:
  bmo-mysql-db:
  bmo-data-dir:
  autoland-hg:
  autoland-db:
  autoland-dev-repos:
